workflow:
    version: 0.3.0
    inputs:
      files:
        - code/helloworld.py
        - code/analyze.py
        - data/names.txt
      parameters:
        sleeptime: $[[sleeptime]]
        greeting: $[[greeting]]
    workflow:
      type: serial
      specification:
        steps:
          - environment: 'python:3.7-slim'
            commands:
              - ${python} code/helloworld.py
                  --inputfile data/names.txt
                  --outputfile results/greetings.txt
                  --sleeptime ${sleeptime}
                  --greeting "${greeting}"
              - ${python} code/analyze.py
                  --inputfile results/greetings.txt
                  --outputfile results/analytics.json
    outputs:
      files:
        - results/greetings.txt
        - results/analytics.json
outputs:
    - source: "results/greetings.txt"
      title: "Saying Hello to ..."
      caption: "Greetings for all persons."
      format:
          type: "plaintext"
    - source: "results/analytics.json"
      title: "Score"
      format:
          type: "json"
parameters:
    - name: "names"
      label: "Names File"
      dtype: "file"
      target: "data/names.txt"
    - name: "sleeptime"
      label: "Sleep for (sec.)"
      dtype: "float"
      defaultValue: 10
    - name: "greeting"
      label: "Greeting"
      dtype: "string"
      defaultValue: "Hello"
postproc:
    workflow:
        version: 0.3.0
        inputs:
          files:
            - code/postproc.py
            - code/ngrams.py
            - runs/
          parameters:
            rundir: runs/
        workflow:
          type: serial
          specification:
            steps:
              - environment: 'python:3.7-slim'
                commands:
                  - ${python} code/ngrams.py
                    --runs "${rundir}"
                    --outputfile results/ngrams.csv
                  - ${python} code/postproc.py
                    --runs "${rundir}"
                    --outputfile results/compare.json
            outputs:
              files:
               - results/compare.json
               - results/ngrams.csv
    inputs:
        files:
            - "results/greetings.txt"
            - "results/analytics.json"
        runs: "runs/"
    outputs:
        - source: "results/ngrams.csv"
          title: "Top-25 3-grams"
          caption: "Histogram of the 25 most frequent 3-grams over all submission."
          format:
              type: "csv"
              header: false
              columns:
                  - "3-gram"
                  - "Count"
        - source: "results/compare.json"
          title: "Comparison Results"
          caption: "Results summarizing the scores for different runs."
results:
    file: "results/analytics.json"
    schema:
        - name: "ngrams"
          label: "Number of 3-grams"
          dtype: "int"
          required: False
        - name: "linecount"
          label: "Number of lines"
          dtype: "int"
          required: False
        - name: "score"
          label: "Score"
          dtype: "float"
          required: True
    orderBy:
        - name: "score"
          sortDesc: true
        - name: "ngrams"
          sortDesc: true
        - name: "linecount"
          sortDesc: false
